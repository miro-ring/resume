import{n as a,b as m,m as x,r as k,o as z,a as A,c as g,q as B}from"./BEkIgNEX.js";function h(e,n,t){if(e==null)return n(void 0),t&&t(void 0),a;const r=m(()=>e.subscribe(n,t));return r.unsubscribe?()=>r.unsubscribe():r}const f=[];function E(e,n){return{subscribe:M(e,n).subscribe}}function M(e,n=a){let t=null;const r=new Set;function c(u){if(x(e,u)&&(e=u,t)){const o=!f.length;for(const s of r)s[1](),f.push(s,e);if(o){for(let s=0;s<f.length;s+=2)f[s][0](f[s+1]);f.length=0}}}function l(u){c(u(e))}function b(u,o=a){const s=[u,o];return r.add(s),r.size===1&&(t=n(c,l)||a),u(e),()=>{r.delete(s),r.size===0&&t&&(t(),t=null)}}return{set:c,update:l,subscribe:b}}function v(e,n,t){const r=!Array.isArray(e),c=r?[e]:e;if(!c.every(Boolean))throw new Error("derived() expects stores as input, got a falsy value");const l=n.length<2;return E(t,(b,u)=>{let o=!1;const s=[];let p=0,d=a;const y=()=>{if(p)return;d();const i=n(r?s[0]:s,b,u);l?b(i):d=typeof i=="function"?i:a},q=c.map((i,_)=>h(i,w=>{s[_]=w,p&=~(1<<_),o&&y()},()=>{p|=1<<_}));return o=!0,y(),function(){k(q),d(),o=!1}})}function C(e){let n;return h(e,t=>n=t)(),n}function D(e){g===null&&z(),B&&g.l!==null?S(g).m.push(e):A(()=>{const n=m(e);if(typeof n=="function")return n})}function S(e){var n=e.l;return n.u??(n.u={a:[],b:[],m:[]})}export{v as d,C as g,D as o,h as s,M as w};
